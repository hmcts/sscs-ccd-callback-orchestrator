#!groovy

properties([
  pipelineTriggers([cron('H 22 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://sscs-ccd-callback-orchestrator-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "sscs"
def component = "ccd-callback-orchestrator"

def secrets = [
  'sscs-${env}': [
    secret('idam-api', 'IDAM_API_URL'),
    secret('idam-oauth-user', 'IDAM_OAUTH2_CLIENT_ID'),
    secret('idam-redirect', 'IDAM_OAUTH2_REDIRECT_URL'),
    secret('idam-sscs-systemupdate-user', 'IDAM_SSCS_SYSTEMUPDATE_USER'),
    secret('idam-sscs-systemupdate-password', 'IDAM_SSCS_SYSTEMUPDATE_PASSWORD'),
    secret('idam-sscs-oauth2-client-secret', 'IDAM_OAUTH2_CLIENT_SECRET'),

    // Used by Kubernetes
    secret('idam-s2s-api', 'IDAM_S2S_AUTH'),
    secret('sscs-s2s-secret', 'IDAM_S2S_AUTH_TOTP_SECRET'),
    secret('s2s-micro', 'IDAM_S2S_AUTH_MICROSERVICE')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.Rules = params.SecurityRules

  env.IDAM_OAUTH2_REDIRECT_URL = "https://evidence-sharing-preprod.sscs.reform.hmcts.net"

  loadVaultSecrets(secrets)
  enableSecurityScan()
//  enableSlackNotifications('#sscs-tech')
  enableFullFunctionalTest()

}
